{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/george/assignment-8/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Table from './components/Table';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.addRow = () => {\n      let existingRows = this.state.numRows;\n      this.setState({\n        numRows: existingRows + 1\n      });\n    };\n\n    this.addColumn = () => {\n      let existingColumns = this.state.numColumns;\n      this.setState({\n        numColumns: existingColumns + 1\n      });\n    };\n\n    this.deleteRow = () => {\n      let existingRows = this.state.numRows;\n      this.setState({\n        numRows: existingRows - 1\n      });\n    };\n\n    this.deleteColumn = () => {\n      let existingColumns = this.state.numColumns;\n      this.setState({\n        numColumns: existingColumns - 1\n      });\n    };\n\n    this.state = {\n      numRows: 2,\n      numColumns: 3,\n      chosenColor: ''\n    };\n  } //Adding rows\n\n\n  //displaying the result\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Assignment-8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"addRowButton\",\n          type: \"button\",\n          onClick: () => this.addRow(),\n          children: \"Add a Row\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"addColumnButton\",\n          type: \"button\",\n          onClick: () => this.addColumn(),\n          children: \"Add a Column\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"deleteRowButton\",\n          type: \"button\",\n          onClick: () => this.deleteRow(),\n          children: \"Remove a Row\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"deleteColumnButton\",\n          type: \"button\",\n          onClick: () => this.deleteColumn(),\n          children: \"Remove a Column\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"colorMenu\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Select a color to shade in the cell: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"colors\",\n          id: \"colors\",\n          onChange: event => {\n            this.setState({\n              color: event.target.value\n            });\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"red\",\n            children: \"Red\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"orange\",\n            children: \"Orange\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"yellow\",\n            children: \"Yellow\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"green\",\n            children: \"Green\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"blue\",\n            children: \"Blue\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        className: \"tbl\",\n        numColumns: this.state.numColumns,\n        numRows: this.state.numRows,\n        color: this.state.color\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/george/assignment-8/src/App.js"],"names":["React","Component","Table","App","constructor","props","addRow","existingRows","state","numRows","setState","addColumn","existingColumns","numColumns","deleteRow","deleteColumn","chosenColor","render","event","color","target","value"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Table from './components/Table';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      numRows: 2,\n      numColumns: 3,\n      chosenColor: ''\n    }\n  }\n  //Adding rows\n  addRow = () => {\n    let existingRows = this.state.numRows;\n    this.setState({\n      numRows: existingRows + 1\n    })\n  }\n  //adding columns\n  addColumn = () => {\n    let existingColumns = this.state.numColumns;\n    this.setState({\n      numColumns: existingColumns + 1\n    })\n  }\n  //deleting rows\n  deleteRow=()=>{\n    let existingRows=this.state.numRows;\n    this.setState({\n      numRows:existingRows-1\n    })\n  }\n  //deleting columns\n  deleteColumn=()=>{\n    let existingColumns=this.state.numColumns;\n    this.setState({\n      numColumns:existingColumns-1\n    })\n  }\n  //displaying the result\n  render() {  \n    return (\n      <div className=\"App\">\n        <h1>Assignment-8</h1>\n        <div className=\"buttons\">\n          <button id=\"addRowButton\" type=\"button\" onClick={() => this.addRow()}>Add a Row</button>\n          <button id=\"addColumnButton\" type=\"button\" onClick={() => this.addColumn()}>Add a Column</button>\n          <button id=\"deleteRowButton\" type=\"button\" onClick={()=>this.deleteRow()}>Remove a Row</button>\n          <button id=\"deleteColumnButton\" type=\"button\" onClick={()=>this.deleteColumn()}>Remove a Column</button>\n        </div>\n        <br></br>\n        <div id=\"colorMenu\">\n          <label>Select a color to shade in the cell: </label>\n          <select name=\"colors\" id=\"colors\" onChange={(event) => {\n            this.setState({\n              color: event.target.value\n            })\n          }}>\n            <option value=\"red\">Red</option>\n            <option value=\"orange\">Orange</option>\n            <option value=\"yellow\">Yellow</option>\n            <option value=\"green\">Green</option>\n            <option value=\"blue\">Blue</option>\n          </select>\n        </div>\n        <br></br>\n        <Table className=\"tbl\" \n          numColumns = {this.state.numColumns} \n          numRows = {this.state.numRows}\n          color = {this.state.color}\n        >\n        </Table>\n      </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}